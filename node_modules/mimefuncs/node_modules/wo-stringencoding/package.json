{
  "name": "wo-stringencoding",
  "author": {
    "name": "Joshua Bell",
    "email": "inexorabletash@gmail.com"
  },
  "contributors": [
    {
      "name": "Rick Eyre"
    }
  ],
  "version": "0.1.1",
  "description": "Polyfill for the Encoding Living Standard's API.",
  "main": "dist/stringencoding.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/inexorabletash/stringencoding.git"
  },
  "keywords": [
    "encoding",
    "decoding"
  ],
  "bugs": {
    "url": "https://github.com/inexorabletash/stringencoding/issues"
  },
  "homepage": "https://github.com/inexorabletash/stringencoding",
  "devDependencies": {
    "browserify": "~3.24.13",
    "grunt": "~0.4.2",
    "grunt-browserify": "~1.3.0",
    "grunt-contrib-uglify": "~0.4.0",
    "grunt-contrib-clean": "*"
  },
  "readme": "stringencoding\n==============\n\nThis is a polyfill for the [Encoding Living Standard](http://encoding.spec.whatwg.org/)\nAPI for the Web, allowing encoding and decoding of textual data to and from Typed Array\nbuffers for binary data in JavaScript\n\nBasic examples and unit tests are included.\n\n### API Overview ###\n\nScripts\n```html\n  <!-- Required for non-Unicode encodings -->\n  <script src=\"encoding-indexes.js\"></script>\n\n  <script src=\"encoding.js\"></script>\n```\n\nBasic Usage\n\n```js\n  var uint8array = TextEncoder(encoding).encode(string);\n  var string = TextDecoder(encoding).decode(uint8array);\n```\n\nStreaming Decode\n\n```js\n  var string = \"\", decoder = TextDecoder(encoding), buffer;\n  while (buffer = next_chunk()) { \n    string += decoder.decode(buffer, {stream:true});\n  }\n  string += decoder.decode(); // finish the stream\n```\n\n### Encodings ###\n\nAll encodings from the Encoding specification are supported:\n\nutf-8 ibm864 ibm866 iso-8859-2 iso-8859-3 iso-8859-4 iso-8859-5 iso-8859-6 \niso-8859-7 iso-8859-8 iso-8859-10 iso-8859-13 iso-8859-14 iso-8859-15 iso-8859-16 \nkoi8-r koi8-u macintosh windows-874 windows-1250 windows-1251 windows-1252 \nwindows-1253 windows-1254 windows-1255 windows-1256 windows-1257 windows-1258 \nx-mac-cyrillic gbk gb18030 hz-gb-2312 big5 euc-jp iso-2022-jp shift_jis euc-kr \niso-2022-kr utf-16 utf-16be\n\n(Some encodings may be supported under other names, e.g. ascii, iso-8859-1, etc.\nSee [Encoding](http://encoding.spec.whatwg.org/) for additional labels for each encoding.)\n\nEncodings other than utf-8, utf-16 and utf-16be require an additional \n`encoding-indexes.js` file to be included. It is rather large \n(539kB uncompressed, 182kB gzipped); portions may be deleted if \nsupport for some encodings is not required.\n",
  "readmeFilename": "README.md",
  "_id": "wo-stringencoding@0.1.1",
  "_from": "wo-stringencoding@~0.1.1"
}
